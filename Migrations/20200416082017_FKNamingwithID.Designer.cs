// <auto-generated />
using System;
using EquipmentChecklistDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EquipmentChecklistDataAccess.Migrations
{
    [DbContext(typeof(EquipmentChecklistDBContext))]
    [Migration("20200416082017_FKNamingwithID")]
    partial class FKNamingwithID
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EquipmentChecklistDataAccess.Models.Breakdown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("RTGFormId")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RTGFormId");

                    b.ToTable("Breakdowns");
                });

            modelBuilder.Entity("EquipmentChecklistDataAccess.Models.Component", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("Id");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("EquipmentChecklistDataAccess.Models.Equipment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("EquipmentChecklistDataAccess.Models.Issue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("Id");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("EquipmentChecklistDataAccess.Models.RTGForm", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("CreatedByUserID")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("EquipmentId")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("ModifiedByUserID")
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserID");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ModifiedByUserID");

                    b.ToTable("RTGForms");
                });

            modelBuilder.Entity("EquipmentChecklistDataAccess.Models.Remark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComponentIDId")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("IssueIDId")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("RTGFormId")
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("Id");

                    b.HasIndex("ComponentIDId");

                    b.HasIndex("IssueIDId");

                    b.HasIndex("RTGFormId");

                    b.ToTable("Remarks");
                });

            modelBuilder.Entity("EquipmentChecklistDataAccess.Models.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Password")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<bool>("isActive")
                        .HasColumnType("BIT");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EquipmentChecklistDataAccess.Models.Breakdown", b =>
                {
                    b.HasOne("EquipmentChecklistDataAccess.Models.RTGForm", "RTGForm")
                        .WithMany("Breakdowns")
                        .HasForeignKey("RTGFormId");
                });

            modelBuilder.Entity("EquipmentChecklistDataAccess.Models.RTGForm", b =>
                {
                    b.HasOne("EquipmentChecklistDataAccess.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByUserID");

                    b.HasOne("EquipmentChecklistDataAccess.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId");

                    b.HasOne("EquipmentChecklistDataAccess.Models.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserID");
                });

            modelBuilder.Entity("EquipmentChecklistDataAccess.Models.Remark", b =>
                {
                    b.HasOne("EquipmentChecklistDataAccess.Models.Component", "ComponentID")
                        .WithMany()
                        .HasForeignKey("ComponentIDId");

                    b.HasOne("EquipmentChecklistDataAccess.Models.Issue", "IssueID")
                        .WithMany()
                        .HasForeignKey("IssueIDId");

                    b.HasOne("EquipmentChecklistDataAccess.Models.RTGForm", "RTGForm")
                        .WithMany("Remarks")
                        .HasForeignKey("RTGFormId");
                });
#pragma warning restore 612, 618
        }
    }
}
